@inherits Umbraco.Web.Mvc.UmbracoViewPage<UmbracoSecondDemo.Controllers.CartItemsViewModel>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "Master.cshtml";
	var productsItem = Model.Content.Site().Children("products")
						.Where(x => x.IsVisible())
						.FirstOrDefault();
						
	var featuredProducts = (System.Collections.Generic.IEnumerable<IPublishedContent>)productsItem.GetPropertyValue("featuredProducts");
	
	var productsInCart = featuredProducts.Where(x => Model.Items.Keys.Contains(x.GetPropertyValue("SKU")));
	
	Dictionary<IPublishedContent, int> publishedContentCountsByContent = new Dictionary<IPublishedContent, int>();
	
	foreach (KeyValuePair<string, int> skuCountPair in Model.Items)
    {
        var foundProduct = productsInCart.FirstOrDefault(p => ((string)p.GetPropertyValue("SKU")).Contains(skuCountPair.Key));
        publishedContentCountsByContent.Add(foundProduct, skuCountPair.Value);
    }
}
@Html.Partial("~/Views/Partials/SectionHeader.cshtml")

<link href="~/Content/toastr.css" rel="stylesheet" />
<script src="~/Scripts/toastr.js"></script>
<section class="section">
    <h1 style="text-align:center">Your Cart</h1>
    <div class="container">
        @{
            decimal totalSum = 0.0M;
        }
        
        <table class="cart" border="1" style="text-align:center;">
            <caption></caption>
                <tr>
                    <th>Product Name</th>
                    <th>Product Count</th>
                    <th>Position Price</th>
                </tr>
            
            
            @foreach (var productCountPair in publishedContentCountsByContent)
            {
                <tr>
                    @{
                        decimal positionSum = ((decimal)productCountPair.Key.GetProperty("Price").Value) * productCountPair.Value;
                        totalSum += positionSum;
                    }
                    <td> <a href="@productCountPair.Key.Url">@productCountPair.Key.Name</a> </td>
                    <td>@productCountPair.Value</td>
                    <td>@positionSum $</td>
                    <td>
                        <button class="button button--border--solid" onclick='removeCartItemClick("@productCountPair.Key.GetPropertyValue("SKU")")'>Remove 1 Instance</button>
                    </td>
                </tr>
            }
        </table>
        <br/> Total sum: @totalSum $<br/>
        <button class="button button--border--solid" onclick='resetCartClick()'>Reset cart items</button>
    </div>

</section>

<script type="text/javascript">
    function resetCartClick() {
        $.post("/umbraco/surface/CartEditor/ResetCartItems",
            function (response) {
                toastr.options = {
                    "closeButton": false,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": false,
                    "positionClass": "toast-top-center",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr.success("You removed all items from the cart!");
            });
    };

    function removeCartItemClick(itemIdentifier) {
        $.post(
            "/umbraco/surface/CartEditor/RemoveItem",
            {
                itemId: itemIdentifier
            },
            function (response) {
                toastr.options = {
                    "closeButton": false,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": false,
                    "positionClass": "toast-top-center",
                    "preventDuplicates": false,
                    "onclick": function () { window.location = window.location},
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr.success("One instance of Item was removed from the Cart!");
                //alert("One instance of " + itemIdentifier + " was removed from the Cart!");
                //window.location = window.location;
            });
    };
</script>